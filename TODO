
IN PROGRESS
- create a model for the markers

TODO
- synchronize zoom between the backends
- save zoom settings
- advance markers
- check proper handling of marker movement on drop, not on subsequent mouse movement
- make markers moveable in Marble
- check for memory leaks when handling menus and actions
- calls to wmwLatLngToPixel are not correct when panning in Google Maps until a zoom is performed
- use appropriate levels in the marker model when scanning for visible markers
- panning in Google Maps is quite slow with many clusters, find out whether the bottleneck is adding the clusters to the html-part or finding the positions of the markers (probably both :-( )

LATER
- include .moc - this is somehow not working now ...
- re-implement clustering for the markers
- don't crash on JavaScript errors ...
- find out how to trigger signals from inside JavaScript ...
- move from WMW2_ASSERT to some kde-thing
- make sure altitude values are properly handled
- find out what causes the Marble dbus errors

DONE
- create directory structure
- create stub widget
- create demo application to load the widget
- create a basic Marble backend
- create a basic Google Maps backend
- define the basic backend interface
- center of the map is synchronised between the two backends
- provide basic control features in the demo: location, zoom, pan
- save widget state to configuration file
- add basic markers
- access to Marble projections
- access to Marble float items
- access to Google Maps float items
